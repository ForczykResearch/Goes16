function [VAH1DSF,sgoodfrac]=DisplayVolcanicAshHeightFullDiskData(titlestr)
% Display the Volcanic Ash Height Data from the GOES16/17 data
% on a texture map for the FullDisk archive for the multiband images
% Written By: Stephen Forczyk
% Created: Feb 28,2021
% Revised: 
% Classification: Unclassified
global MetaDataS;
global VAHS VAMLS ;
global AshMassLoadTotMassS CountAttAshRetS;
global AshHtOutlierPixCountS AshMassOutlierPixCountS;
global AshCloudHtStatS AshMassStatS AshExistConfAngS;
global DET_DQFS RET_DQFS;
global tS yS xS tBS goesImagerS;
global SatDataS GeoSpatialS;
global AlgoS GoesWaveBand;
global AlgoProdVersionContainerS ProcessParamS;
global QLZAS  QLZABS;
global RLZAS RLZABS;
global SZAS SZABS;
global GRBErrorsS L0ErrorsS;
global GOESFileName;
global RasterLats RasterLons;
global westEdge eastEdge northEdge southEdge;
global MonthDayStr MonthDayYearStr;
global DayMonthNonLeapYear DayMonthLeapYear CalendarFileName;
global NumProcFiles ProcFileList;
global RptGenPresent iCreatePDFReport pdffilename rpt chapter;
global JpegCounter JpegFileList;
global DQFHdr DQFTable MiscHdr MiscTable RqmtsHdr RqmtsTable;
global DQFCauses DQFNormed DQFLabels;
global DQFHdr2 DQFTable2 AshHdr AshSizeTable;

global widd2 lend2;
global initialtimestr igrid ijpeg ilog imovie;
global vert1 hor1 widd lend;
global vert2 hor2 machine;
global chart_time;
global Fz1 Fz2 fid;
global idirector mov izoom iwindow;
global matpath GOES16path;
global jpegpath ;
global smhrpath excelpath ascpath;
global ipowerpoint PowerPointFile scaling stretching padding;
global ichartnum;
% additional paths needed for mapping
global matpath1 mappath;
global canadapath stateshapepath topopath;
global trajpath militarypath datapath;
global figpath screencapturepath gridpath;
global shapepath2 countrypath countryshapepath usstateboundariespath;
global GOES16Band1path GOES16Band2path GOES16Band3path GOES16Band4path;
global GOES16Band5path GOES16Band6path GOES16Band7path GOES16Band8path
global GOES16Band9path GOES16Band10path GOES16Band11path GOES16Band12path;
global GOES16Band13path GOES16Band14path GOES16Band15path GOES16Band16path;
global GOES16CloudTopHeightpath GOES16BandPaths;
global RasterLats RasterLons;

if((iCreatePDFReport==1) && (RptGenPresent==1))
    import mlreportgen.dom.*;
    import mlreportgen.report.*;
end
fprintf(fid,'%s\n','-----Create Full Disk Volcanic Ash Height plot-----');
% Load the Lat lon Values for the Grid Lat/Lon
eval(['cd ' gridpath(1:length(gridpath)-1)]);
GridMatFileName='GOES16-FullDisk-Lat-Lon-Boundaries.mat';
load(GridMatFileName,'RasterLats','RasterLons');
% Get the size limits
VAH=VAHS.values;
[nrows,ncols]=size(VAH);
VAH1D=reshape(VAH,nrows*ncols,1);
VAH1DS=sort(VAH1D);
[ilow]=find(VAH1DS<0);
a1=isempty(ilow);
if(a1==0)
    numlow=length(ilow);
else
    numlow=0;
end
a1=isnan(VAH1DS);
numnan=sum(a1);
numvals2=(nrows*ncols)-(numnan+1);
VAH1DSF=zeros(numvals2,1);
for k=1:numvals2
    VAH1DSF(k,1)=VAH1DS(k,1);
end
sgoodfrac=numvals2/(nrows*ncols);
VAHmin=VAH1DSF(1,1);
VAHmax=VAH1DSF(numvals2,1);
VAH2=VAH;
[ilow,jlow]=find(VAH2<=10);
a1=isempty(ilow);
if(a1==0)
    for ii=1:ilow
        for jj=1:jlow
            val=VAH2(ii,jj);
            if(val<=10)
                val=val-100;
                VAH2(ii,jj)=val;
            end
        end
    end
end
statstr1=strcat('Minimum Value VAH=',num2str(VAHmin,6),'-Max Value VAH=',num2str(VAHmax,6));
fprintf(fid,'%s\n',statstr1);
% Now make a table showing the ash particle sizes
AshHdr=cell(1,3);
AshHdr{1,1}='Variable Name';
AshHdr{1,2}='Size Limit';
AshHdr{1,3}='Fraction of Particles';
AshSizeTable=cell(1,3);
AshSizeTable{1,1}='RET_DQF';
AshSizeTable{1,2}='0-2 microns';
size1=RET_DQFS.percent_ash_particle_size_lt_2um_qf;
sizestr1=num2str(size1,6);
AshSizeTable{1,3}=sizestr1;
AshSizeTable{2,1}='RET_DQF';
AshSizeTable{2,2}='2-3 microns';
size2=RET_DQFS.percent_ash_particle_size_ge_2um_lt_3um_qf;
sizestr2=num2str(size2,6);
AshSizeTable{2,3}=sizestr2; 
AshSizeTable{3,1}='RET_DQF';
AshSizeTable{3,2}='3-4 microns';
size3=RET_DQFS.percent_ash_particle_size_ge_3um_lt_4um_qf;
sizestr3=num2str(size3,6);
AshSizeTable{3,3}=sizestr3; 
AshSizeTable{4,1}='RET_DQF';
AshSizeTable{4,2}='4-5 microns';
size4=RET_DQFS.percent_ash_particle_size_ge_4um_lt_5um_qf;
sizestr4=num2str(size4,6);
AshSizeTable{4,3}=sizestr4;
AshSizeTable{5,1}='RET_DQF';
AshSizeTable{5,2}='5-6 microns';
size5=RET_DQFS.percent_ash_particle_size_ge_5um_lt_6um_qf;
sizestr5=num2str(size5,6);
AshSizeTable{5,3}=sizestr5;
AshSizeTable{6,1}='RET_DQF';
AshSizeTable{6,2}='6-7 microns';
size6=RET_DQFS.percent_ash_particle_size_ge_6um_lt_7um_qf;
sizestr6=num2str(size6,6);
AshSizeTable{6,3}=sizestr6; 
AshSizeTable{7,1}='RET_DQF';
AshSizeTable{7,2}='7-8 microns';
size7=RET_DQFS.percent_ash_particle_size_ge_7um_lt_8um_qf;
sizestr7=num2str(size7,6);
AshSizeTable{7,3}=sizestr7; 
AshSizeTable{8,1}='RET_DQF';
AshSizeTable{8,2}='8-9 microns';
size8=RET_DQFS.percent_ash_particle_size_ge_8um_lt_9um_qf;
sizestr8=num2str(size8,6);
AshSizeTable{8,3}=sizestr8; 
AshSizeTable{9,1}='RET_DQF';
AshSizeTable{9,2}='9-10 microns';
size9=RET_DQFS.percent_ash_particle_size_ge_9um_lt_10um_qf;
sizestr9=num2str(size9,6);
AshSizeTable{9,3}=sizestr9; 
AshSizeTable{10,1}='RET_DQF';
AshSizeTable{10,2}='>10 microns';
size10=RET_DQFS.percent_ash_particle_size_ge_10um_qf;
sizestr10=num2str(size10,6);
AshSizeTable{10,3}=sizestr10;
AshSizeTable{11,1}='RET_DQF';
AshSizeTable{11,2}='Invalid Size';
size11=RET_DQFS.percent_ash_particle_size_invalid_qf;
sizestr11=num2str(size11,6);
AshSizeTable{11,3}=sizestr11; 
sumvalidfrac=size1+size2+size3+size4+size5+size6+size7+size8+size9+size10;
ashstr1='------Ash particle sizes vs particle fraction-----';
fprintf(fid,'%s\n',ashstr1);
ashstr2a='Particle size (microns)';
ashstr2b='Particle Fraction';
fprintf(fid,'%s      %s\n',ashstr2a,ashstr2b);
ashstr3a='0-2';
ashstr3b=num2str(size1,6);
fprintf(fid,'         %s                      %s\n',ashstr3a,ashstr3b);
ashstr4a='2-3';
ashstr4b=num2str(size2,6);
fprintf(fid,'         %s                      %s\n',ashstr4a,ashstr4b);
ashstr5a='3-4';
ashstr5b=num2str(size3,6);
fprintf(fid,'         %s                      %s\n',ashstr5a,ashstr5b);
ashstr6a='4-5';
ashstr6b=num2str(size4,6);
fprintf(fid,'         %s                      %s\n',ashstr6a,ashstr6b);
ashstr7a='5-6';
ashstr7b=num2str(size5,6);
fprintf(fid,'         %s                      %s\n',ashstr7a,ashstr7b);
ashstr8a='6-7';
ashstr8b=num2str(size6,6);
fprintf(fid,'         %s                      %s\n',ashstr8a,ashstr8b);
ashstr9a='7-8';
ashstr9b=num2str(size7,6);
fprintf(fid,'         %s                      %s\n',ashstr9a,ashstr9b);
ashstr10a='8-9';
ashstr10b=num2str(size8,6);
fprintf(fid,'         %s                      %s\n',ashstr10a,ashstr10b);
ashstr11a='9-10';
ashstr11b=num2str(size9,6);
fprintf(fid,'         %s                     %s\n',ashstr11a,ashstr11b);
ashstr12a='>10';
ashstr12b=num2str(size10,6);
fprintf(fid,'         %s                      %s\n',ashstr12a,ashstr12b);
ashstr12='------End Of Ash Particle Size Data-----';
fprintf(fid,'%s\n',ashstr12);
ashstr13=strcat('Total fraction of particles with valid size=',num2str(sumvalidfrac,6));
fprintf(fid,'%s\n',ashstr13);
% Fetch the map limits
westEdge=double(GeoSpatialS.geospatial_westbound_longitude);
eastEdge=double(GeoSpatialS.geospatial_eastbound_longitude);
southEdge=double(GeoSpatialS.geospatial_southbound_latitude);
northEdge=double(GeoSpatialS.geospatial_northbound_latitude);
% Get the scan start date and time data based on the file name
[YearS,DayS,HourS,MinuteS,SecondS] = GetGOESDateTimeString(GOESFileName,1);
% Get the scan end date and time data based on the file name
[YearE,DayE,HourE,MinuteE,SecondE] = GetGOESDateTimeString(GOESFileName,2);
result = is_leap_year(YearS);
if(result==0)
    MonthDayStr=char(DayMonthNonLeapYear{DayS,1});
else
    MonthDayStr=char(DayMonthLeapYear{DayS,1});
end
MonthDayYearStr=strcat(MonthDayStr,'-',num2str(YearS));
TotalStr=strcat('Year-',num2str(YearS,4),'-',MonthDayStr,'-Hr-',num2str(HourS,2),'-Min-',num2str(MinuteS,2),'-Sec-',num2str(SecondS));
ha=axesm('globe','Frame','on','Grid','on','meridianlabel','off','parallellabel','on','plabellocation',10,'mlabellocation',20);
gridm('GLineStyle','-','Gcolor',[.8 .7 .6],'Galtitude',.002,'MLineLocation',10,...
     'PLineLocation',10);
framem('FlineWidth',4,'FEdgeColor','yellow')
%setm(gca,'FFaceColor','cyan')
set(gcf,'MenuBar','none');
%set(gcf,'color','black');
%setm(gca,'FFaceColor','black');
set(gcf,'Position',[hor1 vert1 widd lend])
geoshow(RasterLats,RasterLons,VAH2,'DisplayType','texturemap');
demcmap(VAH2,256);
hold on
eval(['cd ' mappath(1:length(mappath)-1)]);
% load the country borders and plot them
eval(['cd ' mappath(1:length(mappath)-1)]);
load('USAHiResBoundaries.mat','USALat','USALon');
plotm(USALat,USALon,'r');
load('CanadaBoundaries.mat','CanadaLat','CanadaLon');
plotm(CanadaLat,CanadaLon,'r');
load('MexicoBoundaries.mat','MexicoLat','MexicoLon');
plotm(MexicoLat,MexicoLon,'r');
load('CubaBoundaries.mat','CubaLat','CubaLon');
plotm(CubaLat,CubaLon,'r');
load('DominicanRepublicBoundaries.mat','DRLat','DRLon');
plotm(DRLat,DRLon,'r');
load('HaitiBoundaries.mat','HaitiLat','HaitiLon');
plotm(HaitiLat,HaitiLon,'r');
load('BelizeBoundaries.mat','BelizeLat','BelizeLon');
plotm(BelizeLat,BelizeLon,'r');
load('GautemalaBoundaries.mat','GautemalaLat','GautemalaLon');
plotm(GautemalaLat,GautemalaLon,'r')
load('JamaicaBoundaries.mat','JamaicaLat','JamaicaLon');
plotm(JamaicaLat,JamaicaLon,'r');
load('NicaraguaBoundaries.mat','NicaraguaLat','NicaraguaLon');
plotm(NicaraguaLat,NicaraguaLon,'r')
load('HondurasBoundaries.mat','HondurasLat','HondurasLon');
plotm(HondurasLat,HondurasLon,'r')
load('ElSalvadorBoundaries.mat','ElSalvadorLat','ElSalvadorLon');
plotm(ElSalvadorLat,ElSalvadorLon,'r');
load('PanamaBoundaries.mat','PanamaLat','PanamaLon');
plotm(PanamaLat,PanamaLon,'r');
load('ColumbiaBoundaries.mat','ColumbiaLat','ColumbiaLon');
plotm(ColumbiaLat,ColumbiaLon,'r');
load('VenezuelaBoundaries.mat','VenezuelaLat','VenezuelaLon');
plotm(VenezuelaLat,VenezuelaLon,'r')
load('PeruBoundaries.mat','PeruLat','PeruLon');
plotm(PeruLat,PeruLon,'r');
load('EcuadorBoundaries.mat','EcuadorLat','EcuadorLon');
plotm(EcuadorLat,EcuadorLon,'r')
load('BrazilBoundaries.mat','BrazilLat','BrazilLon');
plotm(BrazilLat,BrazilLon,'r');
load('BoliviaBoundaries.mat','BoliviaLat','BoliviaLon');
plotm(BoliviaLat,BoliviaLon,'r')
load('ChileBoundaries.mat','ChileLat','ChileLon');
plotm(ChileLat,ChileLon,'r');
load('ArgentinaBoundaries.mat','ArgentinaLat','ArgentinaLon');
plotm(ArgentinaLat,ArgentinaLon,'r');
load('UruguayBoundaries.mat','UruguayLat','UruguayLon');
plotm(UruguayLat,UruguayLon,'r');
load('CostaRicaBoundaries.mat','CostaRicaLat','CostaRicaLon');
plotm(CostaRicaLat,CostaRicaLon,'r');
load('FrenchGuianaBoundaries.mat','FrenchGuianaLat','FrenchGuianaLon');
plotm(FrenchGuianaLat,FrenchGuianaLon,'r');
load('GuyanaBoundaries.mat','GuyanaLat','GuyanaLon');
plotm(GuyanaLat,GuyanaLon,'r');
load('SurinameBoundaries.mat','SurinameLat','SurinameLon');
plotm(SurinameLat,SurinameLon,'r');
camposm(0,-75,3);
set(gcf,'Position',[hor1 vert1 widd lend])
title(titlestr)
hold off
hc=colorbar;
% Added some labels at the bottom
newaxesh=axes('Position',[0 0 1 1]);
set(newaxesh,'XLim',[0 1],'YLim',[0 1]);
tx1=.16;
ty1=.10;
txtstr1=strcat('Start Scan Time-',TotalStr);
txt1=text(tx1,ty1,txtstr1,'FontWeight','bold','FontSize',12);
tx2=.60;
ty2=.10;
txtstr2=strcat('Day Of Year-',num2str(DayS));
txt2=text(tx2,ty2,txtstr2,'FontWeight','bold','FontSize',12);
tx5=.86;
ty5=.95;
txt5=text(tx5,ty5,'VAH-m','FontWeight','bold','FontSize',12);
set(newaxesh,'Visible','Off');
% Save this chart
figstr=strcat(titlestr,'.jpg');
eval(['cd ' jpegpath(1:length(jpegpath)-1)]);
actionstr='print';
typestr='-djpeg';
[cmdString]=MyStrcat2(actionstr,typestr,figstr);
eval(cmdString);
pause(chart_time);
JpegCounter=JpegCounter+1;
JpegFileList{JpegCounter+1,1}=figstr;
JpegFileList{JpegCounter+1,2}=jpegpath;
close('all');
if((iCreatePDFReport==1) && (RptGenPresent==1))
    [ibreak]=strfind(GOESFileName,'_e');
    is=1;
    ie=ibreak(1)-1;
    GOESShortFileName=GOESFileName(is:ie);
    headingstr1=strcat('Volcanic Dust Data For File-',GOESShortFileName);
    chapter = Chapter("Title",headingstr1);
    add(chapter,Section('Volcanic Dust Cloud Height'));
    imdata = imread(figstr);
    [nhigh,nwid,ndepth]=size(imdata);
    image = mlreportgen.report.FormalImage();
    image.Image = which(figstr);
    pdftxtstr=strcat('Dust Cloud Height For File-',GOESShortFileName);
    pdftext = Text(pdftxtstr);
    pdftext.Color = 'red';
    image.Caption = pdftext;
    nhighs=floor(nhigh/2.4);
    nwids=floor(nwid/2.4);
    heightstr=strcat(num2str(nhighs),'px');
    widthstr=strcat(num2str(nwids),'px');
    image.Height = heightstr;
    image.Width = widthstr;
    image.ScaleToFit=0;
    add(chapter,image);
    parastr1=strcat('The Data for this chart was from file-',GOESShortFileName,'.');
    parastr2=strcat('The image is made up of-',num2str(nrows),'-rows and-',num2str(ncols),'-cols of data');
    parastr3='Volcanic Dust Cloud Height and Mass Loading is calculated from the ABI image data and the VAA or Volcanic Ash Algorithm.';
    parastr4='Primarily the VAA uses data from 5 ABI channels which are 10,11,14,15 and 16 which are in in the LWIR region ans thus can operate day or night.';
    parastr5='The VAA uses this data to estimate pixels likely have volcanic ash and then proceeds to calculate the height of the cloud and the mass per unit area.';
    parastr6=strcat(parastr1,parastr2,parastr3,parastr4,parastr5);
    p1 = Paragraph(parastr5);
    p1.Style = {OuterMargin("0pt", "0pt","0pt","10pt")};
    add(chapter,p1);
    br = PageBreak();
    add(chapter,br);
 % Add a table showing key requirements
    RqmtsHdr={'Item'  'Requirement'};
    RqmtsTable=cell(16,2);
    RqmtsTable{1,1}='Geographic Coverage';
    RqmtsTable{1,2}='FullDisk';
    RqmtsTable{2,1}='Vertical Resolution';
    RqmtsTable{2,2}='3 km';
    RqmtsTable{3,1}='Horizontal Resolution';
    RqmtsTable{3,2}='2 km';
    RqmtsTable{4,1}='Mapping Accuracy';
    RqmtsTable{4,2}='1 km';
    RqmtsTable{5,1}='Measurement Range';
    RqmtsTable{5,2}='0-50 tons/km^2';
    RqmtsTable{6,1}='Measurement Accuracy';
    RqmtsTable{6,2}='2 tons/km^2';
    RqmtsTable{7,1}='Refresh Rate';
    RqmtsTable{7,2}='15 min';
    RqmtsTable{8,1}='Data Latency';
    RqmtsTable{8,2}='430 sec';
    RqmtsTable{9,1}='Measurement Precision';
    RqmtsTable{9,2}='2.5 tons/km^2';
    RqmtsTable{10,1}='Temporal Coverage';
    RqmtsTable{10,2}='Day/Night';
    RqmtsTable{11,1}='LZA Quantitative Limits';
    RqmtsTable{11,2}='0-60 Deg';
    RqmtsTable{12,1}='Channel 10';
    RqmtsTable{12,2}='7.4 microns';
    RqmtsTable{13,1}='Channel 11';
    RqmtsTable{13,2}='8.5 microns';
    RqmtsTable{14,1}='Channel 14';
    RqmtsTable{14,2}='11.2 microns';
    RqmtsTable{15,1}='Channel 15';
    RqmtsTable{15,2}='12.3 microns';
    RqmtsTable{16,1}='Channel 16';
    RqmtsTable{16,2}='13.3 microns';
    T1=[RqmtsHdr;RqmtsTable];
    tbl1=Table(T1);
    tbl1.Style = [tbl1.Style {Border('solid','black','3px')}];
    tbl1.HAlign='center';
    tbl1.TableEntriesHAlign = 'center';
    tbl1.ColSep = 'single';
    tbl1.RowSep = 'single';
    r = row(tbl1,1);
    r.Style = [r.Style {Color('red'),Bold(true)}];
    bt1 = BaseTable(tbl1);
    tabletitle = Text('Requirements for Volcanic Ash ');
    tabletitle.Bold = false;
    bt1.Title = tabletitle;
    bt1.TableWidth="7in";
    add(chapter,bt1);
    parastr11='Shown above,the table lists some key requirements needed by the ABI-VAA algorithm.';
    parastr12='Temporal coverage spans both day and night conditions because IR bands are used and spatial data is usually at full disk.';
    parastr13='Vertical resolution is fair at 3 km while horizontal resolution is slightly better at 2 km.';
    parastr14=strcat('The units of measurement are a bit unusual-they are in tons/area.','Measurement range is 0 to 50 tons/km^2.');
    parastr15=strcat('Accuracy of the measurement is 2 tons/km^2 and the precision is slightly worse at 2.5 tons/km^2.');
    parastr16='The local zenith angle should be less than 60 deg to return good quantitative measures but will return degraded estimates above this value.';
    parastr17=strcat('As noted earlier,5 channels worth of data is used by the ABI-VAA.',...
        'The first 4 channels perform the ash dermination,channel 16 is to determine cloud tops.');
    parastr19=strcat(parastr11,parastr12,parastr13,parastr14,parastr15,parastr16,parastr17);
    p2 = Paragraph(parastr19);
    p2.Style = {OuterMargin("0pt", "0pt","10pt","10pt")};
    add(chapter,p2);
    br = PageBreak();
    add(chapter,br);
    % Add section on Data Quality factors
    DQFHdr=cell(1,4);
    DQFHdr{1,1}='Variable Name';
    DQFHdr{1,2}='DQF Type';
    DQFHdr{1,3}='Descriptor';
    DQFHdr{1,4}='Fraction';
    DQFTable=cell(1,4);
    DQFTable{1,1}='DET_DQF';
    DQFTable{1,2}='Overall Quality';
    DQFTable{1,3}='% good quality';
    dqf1=DET_DQFS.percent_overall_good_quality_qf;
    dqf1str=num2str(dqf1,6);
    DQFTable{1,4}=dqf1str;
    dqf2=DET_DQFS.percent_overall_bad_quality_qf;
    dqf2str=num2str(dqf2,6);
    DQFTable{2,1}='DET_DQF';
    DQFTable{2,2}='Overall Quality';
    DQFTable{2,3}='% bad quality';
    DQFTable{2,4}=dqf2str;
    DQFTable{3,1}='DET_DQF';
    DQFTable{3,2}='L1 source data';
    DQFTable{3,3}='% good quality';
    dqf3=DET_DQFS.percent_good_source_L1b_data_qf;
    dqf3str=num2str(dqf3,6);
    DQFTable{3,4}=dqf3str;
    DQFTable{4,1}='DET_DQF';
    DQFTable{4,2}='L1 source data';
    DQFTable{4,3}='% bad quality';
    dqf4=DET_DQFS.percent_invalid_source_L1b_data_qf;
    dqf4str=num2str(dqf4,6);
    DQFTable{4,4}=dqf4str;
    DQFTable{5,1}='DET_DQF';
    DQFTable{5,2}='LZA Limits';
    DQFTable{5,3}='% good quality';
    dqf5=DET_DQFS.percent_good_within_LZA_threshold_qf;
    dqf5str=num2str(dqf5,6);
    DQFTable{5,4}=dqf5str;
    DQFTable{6,1}='DET_DQF';
    DQFTable{6,2}='LZA Limits';
    DQFTable{6,3}='% degraded quality';
    dqf6=DET_DQFS.percent_degraded_due_to_LZA_threshold_exceeded_qf;
    dqf6str=num2str(dqf6,6);
    DQFTable{6,4}=dqf6str;
    DQFTable{7,1}='DET_DQF';
    DQFTable{7,2}='Single Layer Ash Confidence';
    DQFTable{7,3}='Number of Levels';
    dqf7=DET_DQFS.number_of_confidence_levels_single_layer_ash;
    dqf7str=num2str(dqf7);
    DQFTable{7,4}=dqf7str;
    DQFTable{8,1}='DET_DQF';
    DQFTable{8,2}='Single Layer Ash Confidence';
    DQFTable{8,3}='High Confidence';
    dqf8=DET_DQFS.percent_high_confidence_single_layer_ash_qf;
    dqf8str=num2str(dqf8);
    DQFTable{8,4}=dqf8str;
    DQFTable{9,1}='DET_DQF';
    DQFTable{9,2}='Single Layer Ash Confidence';
    DQFTable{9,3}='Moderate Confidence';
    dqf9=DET_DQFS.percent_moderate_confidence_single_layer_ash_qf;
    dqf9str=num2str(dqf9,6);
    DQFTable{9,4}=dqf9str;
    DQFTable{10,1}='DET_DQF';
    DQFTable{10,2}='Single Layer Ash Confidence';
    DQFTable{10,3}='Low Confidence';
    dqf10=DET_DQFS.percent_low_confidence_single_layer_ash_qf;
    dqf10str=num2str(dqf10,6);
    DQFTable{10,4}=dqf10str;
    DQFTable{11,1}='DET_DQF';
    DQFTable{11,2}='Single Layer Ash Confidence';
    DQFTable{11,3}='Very Low Confidence';
    dqf11=DET_DQFS.percent_very_low_confidence_single_layer_ash_qf;
    dqf11str=num2str(dqf11,6);
    DQFTable{11,4}=dqf11str;
    DQFTable{12,1}='DET_DQF';
    DQFTable{12,2}='Single Layer Ash Confidence';
    DQFTable{12,3}='Not Ash';
    dqf12=DET_DQFS.percent_single_layer_not_ash_qf;
    dqf12str=num2str(dqf12,6);
    DQFTable{12,4}=dqf12str;
    DQFTable{13,1}='DET_DQF';
    DQFTable{13,2}='Multi Layer Ash Confidence';
    DQFTable{13,3}='Number of Levels';
    dqf13=DET_DQFS.number_of_confidence_levels_multiple_layer_ash;
    dqf13str=num2str(dqf13);
    DQFTable{13,4}=dqf13str;
    DQFTable{14,1}='DET_DQF';
    DQFTable{14,2}='Multi Layer Ash Confidence';
    DQFTable{14,3}='High Confidence';
    dqf14=DET_DQFS.percent_high_confidence_multiple_layer_ash_qf;
    dqf14str=num2str(dqf14);
    DQFTable{14,4}=dqf14str;
    DQFTable{15,1}='DET_DQF';
    DQFTable{15,2}='Multi Layer Ash Confidence';
    DQFTable{15,3}='Moderate Confidence';
    dqf15=DET_DQFS.percent_moderate_confidence_multiple_layer_ash_qf;
    dqf15str=num2str(dqf15);
    DQFTable{15,4}=dqf15str;
    DQFTable{16,1}='DET_DQF';
    DQFTable{16,2}='Multi Layer Ash Confidence';
    DQFTable{16,3}='Low Confidence';
    dqf16=DET_DQFS.percent_low_confidence_multiple_layer_ash_qf;
    dqf16str=num2str(dqf16);
    DQFTable{16,4}=dqf16str;
    DQFTable{17,1}='DET_DQF';
    DQFTable{17,2}='Multi Layer Ash Confidence';
    DQFTable{17,3}='Very Low Confidence';
    dqf17=DET_DQFS.percent_very_low_confidence_multiple_layer_ash_qf;
    dqf17str=num2str(dqf17);
    DQFTable{17,4}=dqf17str;
    DQFTable{18,1}='DET_DQF';
    DQFTable{18,2}='Multi Layer Ash Confidence';
    DQFTable{18,3}='Not Ash';
    dqf18=DET_DQFS.percent_multiple_layer_not_ash_qf;
    dqf18str=num2str(dqf18);
    DQFTable{18,4}=dqf18str;
    T2=[DQFHdr;DQFTable];
    tb21=Table(T2);
    tb21.Style = [tb21.Style {Border('solid','black','3px')}];
    tb21.HAlign='center';
    tb21.TableEntriesHAlign = 'center';
    tb21.ColSep = 'single';
    tb21.RowSep = 'single';
    r = row(tb21,1);
    r.Style = [r.Style {Color('red'),Bold(true)}];
    bt2 = BaseTable(tb21);
    tabletitle = Text('Volcanic Ash-DET-DQF');
    tabletitle.Bold = false;
    bt2.Title = tabletitle;
    bt2.TableWidth="7in";
    add(chapter,bt2);
% add text to describe the table
    parastr21='The table above shows key paramaters extracted from the variable DET_DQF or detection data quality factors.';
    parastr22='A total of 18 rows and 4 columns make up this table.';
    parastr23='Column 1 of the table names the variable that was the source of the data-which was the same for all the rows.';
    parastr24='In the second column is the overall classification of the data on that row-these entries could be grouped as belonging to 1 of 5 types of entries.';
    parastr25='Rows 1 and 2 contain data that relate to the overall quality of the data-note that in many cases the sum of the good and bad quality data fractions>1.';
    parastr26='Rows 3 and 4 provide the some information of the quality of the Level 1 or L1 source data.';
    parastr27='Local Horizontal Angle (LHS) greatly affects the quality of the data and this is detailed in rows 5 and 6.';
    parastr28='The remainder of the columns presents the confidence level that either single or multiple layer ash clouds were detected.';
    parastr28a='Typically,the "NOT ASH" category is much larger than single or multiple ash cloud detection fraction.';
    parastr29=strcat(parastr21,parastr22,parastr23,parastr24,parastr25,parastr26,parastr27,parastr28,parastr28a);
    p3 = Paragraph(parastr29);
    p3.Style = {OuterMargin("0pt", "0pt","10pt","10pt")};
    add(chapter,p3);
% add text for next table
    parastr31='The table below shows key paramaters extracted from the variable RET_DQF or Retrieval data quality factors.';
    parastr32='A total of 12 rows and 4 columns make up this table-the column lavels arte the same as the preceeding table.';
    parastr33='Rows 1 through 3 detail the success of being able to calculate or retrive useful data from the individual pixels.';
    parastr34='The next 3 rows provide the success in retrieving the cloud top temp metric.';
    parastr35='Success in retrieving the cloud emmissivity valyes is shown in rows 7 through 9.';
    parastr36='The optical depth ratio is another important parameter and these values are demonstrated in rows 10 through 12.';
    parastr39=strcat(parastr31,parastr32,parastr33,parastr34,parastr35,parastr36);
    p4 = Paragraph(parastr39);
    p4.Style = {OuterMargin("0pt", "0pt","10pt","10pt")};
    add(chapter,p4);
    br = PageBreak();
    add(chapter,br);
    DQFHdr2=DQFHdr;
    DQFTable2=cell(12,4);
    DQFTable2{1,1}='RET_DQF';
    DQFTable2{1,2}='Retrieval Status';
    DQFTable2{1,3}='Good Retrieval';
    dqfr1=RET_DQFS.percent_good_retrieval_qf;
    dqfr1str=num2str(dqfr1,6);
    DQFTable2{1,4}=dqfr1str;
    DQFTable2{2,1}='RET_DQF';
    DQFTable2{2,2}='Retrieval Status';
    DQFTable2{2,3}='Failed Retrieval';
    dqfr2=RET_DQFS.percent_failed_retrieval_qf;
    dqfr2str=num2str(dqfr2,6);
    DQFTable2{2,4}=dqfr2str;
    DQFTable2{3,1}='RET_DQF';
    DQFTable2{3,2}='Retrieval Status';
    DQFTable2{3,3}='Retrieval-Not Attempted';
    dqfr3=RET_DQFS.percent_not_attempted_retrieval_qf;
    dqfr3str=num2str(dqfr3,6);
    DQFTable2{3,4}=dqfr3str;
    DQFTable2{4,1}='RET_DQF';
    DQFTable2{4,2}='Cloud Top Temp Retrieval Status';
    DQFTable2{4,3}='High Quality Fraction';
    dqfr4=RET_DQFS.percent_high_quality_retrieved_cloud_top_temperature_qf;
    dqfr4str=num2str(dqfr4,6);
    DQFTable2{4,4}=dqfr4str;
    DQFTable2{5,1}='RET_DQF';
    DQFTable2{5,2}='Cloud Top Temp Retrieval Status';
    DQFTable2{5,3}='Medium Quality Fraction';
    dqfr5=RET_DQFS.percent_medium_quality_retrieved_cloud_top_temperature_qf;
    dqfr5str=num2str(dqfr5,6);
    DQFTable2{5,4}=dqfr5str;
    DQFTable2{6,1}='RET_DQF';
    DQFTable2{6,2}='Cloud Top Temp Retrieval Status';
    DQFTable2{6,3}='Low Quality Fraction';
    dqfr6=RET_DQFS.percent_low_quality_retrieved_cloud_top_temperature_qf;
    dqfr6str=num2str(dqfr6,6);
    DQFTable2{6,4}=dqfr6str;
    DQFTable2{7,1}='RET_DQF';
    DQFTable2{7,2}='Cloud Emissivity Retrieval Status';
    DQFTable2{7,3}='High Quality Fraction';
    dqfr7=RET_DQFS.percent_high_quality_retrieved_cloud_emissivity_qf;
    dqfr7str=num2str(dqfr7,6);
    DQFTable2{7,4}=dqfr7str;
    DQFTable2{8,1}='RET_DQF';
    DQFTable2{8,2}='Cloud Emissivity Retrieval Status';
    DQFTable2{8,3}='Medium Quality Fraction';
    dqfr8=RET_DQFS.percent_medium_quality_retrieved_cloud_emissivity_qf;
    dqfr8str=num2str(dqfr8,6);
    DQFTable2{8,4}=dqfr8str;
    DQFTable2{9,1}='RET_DQF';
    DQFTable2{9,2}='Cloud Emissivity Retrieval Status';
    DQFTable2{9,3}='Low Quality Fraction';
    dqfr9=RET_DQFS.percent_low_quality_retrieved_cloud_emissivity_qf;
    dqfr9str=num2str(dqfr9,6);
    DQFTable2{9,4}=dqfr9str;
    DQFTable2{10,1}='RET_DQF';
    DQFTable2{10,2}='Optical Depth Ratio';
    DQFTable2{10,3}='High Quality Fraction';
    dqfr10=RET_DQFS.pct_high_quality_retrieved_absorption_optical_depth_ratio_qf;
    dqfr10str=num2str(dqfr10,6);
    DQFTable2{10,4}=dqfr10str;
    DQFTable2{11,1}='RET_DQF';
    DQFTable2{11,2}='Optical Depth Ratio';
    DQFTable2{11,3}='Medium Quality Fraction';
    dqfr11=RET_DQFS.pct_medium_quality_retrieved_absorption_optical_depth_ratio_qf;
    dqfr11str=num2str(dqfr11,6);
    DQFTable2{11,4}=dqfr11str;
    DQFTable2{12,1}='RET_DQF';
    DQFTable2{12,2}='Optical Depth Ratio';
    DQFTable2{12,3}='Low Quality Fraction';
    dqfr12=RET_DQFS.pct_low_quality_retrieved_absorption_optical_depth_ratio_qf;
    dqfr12str=num2str(dqfr12,6);
    DQFTable2{12,4}=dqfr12str;
% add some of this key data to the log file
    fprintf(fid,'%s\n','-----Key statistics on data retrieval-----');
    retstr1=strcat('Frac of Pixels with good data retrieval                     =',num2str(dqfr1,6));
    fprintf(fid,'%s\n',retstr1);
    retstr2=strcat('Frac of Pixels with failed data retrieval                   =',num2str(dqfr2,6));
    fprintf(fid,'%s\n',retstr2);
    retstr3=strcat('Frac of Pixels with no attempt at data retireval            =',num2str(dqfr3,6));
    fprintf(fid,'%s\n',retstr3);
    retstr4=strcat('Frac of Pixels with high quality Cloud Top Temp retrieval   =',num2str(dqfr4,6));
    fprintf(fid,'%s\n',retstr4);
    retstr5=strcat('Frac of Pixels with medium quality Cloud Top Temp retrieval =',num2str(dqfr5,6));
    fprintf(fid,'%s\n',retstr5);
    retstr6=strcat('Frac of Pixels with low quality Cloud Top Temp retrieval    =',num2str(dqfr6,6));
    fprintf(fid,'%s\n',retstr6);
    retstr7=strcat('Frac of Pixels with high quality Cloud Emissivity           =',num2str(dqfr7,6));
    fprintf(fid,'%s\n',retstr7);
    retstr8=strcat('Frac of Pixels with medium quality Cloud Emissivity         =',num2str(dqfr8,6));
    fprintf(fid,'%s\n',retstr8);
    retstr9=strcat('Frac of Pixels with low quality Cloud Emissivity            =',num2str(dqfr9,6));
    fprintf(fid,'%s\n',retstr9);
    retstr10=strcat('Frac of pixels with high quality Optical Depth Ratio        =',num2str(dqfr10,6));
    fprintf(fid,'%s\n',retstr10);
    retstr11=strcat('Frac of pixels with medium quality Optical Depth Ratio      =',num2str(dqfr11,6));
    fprintf(fid,'%s\n',retstr11);
    retstr12=strcat('Frac of pixels with low quality Optical Depth Ratio         =',num2str(dqfr12,6));
    fprintf(fid,'%s\n',retstr12);
    fprintf(fid,'%s\n','-----End statistics on data retrieval-----');
    T3=[DQFHdr2;DQFTable2];
    tb31=Table(T3);
    tb31.Style = [tb31.Style {Border('solid','black','3px')}];
    tb31.HAlign='center';
    tb31.TableEntriesHAlign = 'center';
    tb31.ColSep = 'single';
    tb31.RowSep = 'single';
    r = row(tb31,1);
    r.Style = [r.Style {Color('red'),Bold(true)}];
    bt3 = BaseTable(tb31);
    tabletitle = Text('Volcanic Ash-RET-DQF');
    tabletitle.Bold = false;
    bt3.Title = tabletitle;
    bt3.TableWidth="7in";
    add(chapter,bt3);
    br = PageBreak();
    add(chapter,br);
    T4=[AshHdr;AshSizeTable];
    tb41=Table(T4);
    tb41.Style = [tb41.Style {Border('solid','black','3px')}];
    tb41.HAlign='center';
    tb41.TableEntriesHAlign = 'center';
    tb41.ColSep = 'single';
    tb41.RowSep = 'single';
    r = row(tb41,1);
    r.Style = [r.Style {Color('red'),Bold(true)}];
    bt4 = BaseTable(tb41);
    tabletitle = Text('Volcanic Ash Partices Sizes');
    tabletitle.Bold = false;
    bt4.Title = tabletitle;
    bt4.TableWidth="7in";
    add(chapter,bt4);
    parastr41='The table just above this text shows the distribution of ash particles by size.';
    parastr42=strcat('Note that the sum of the 10 valid particle sizes was-',num2str(sumvalidfrac,6),'-while the invalid sizes were-',num2str(size11,6),'.');
    if(sumvalidfrac>=.50)
        parastr43='Note that most of the ash cloud particle sizes were in the valid range.';
    else
        parastr43='Most of the particles sizes calculated were not in the valid range.';
    end
    parastr49=strcat(parastr41,parastr42,parastr43);
    p5 = Paragraph(parastr49);
    p5.Style = {OuterMargin("0pt", "0pt","10pt","10pt")};
    add(chapter,p5);
% Build the data needed to create an Ash Size Pie Chart
if(sumvalidfrac>0)
    DQFNormed=cell(10,1);
    DQFLabels=cell(10,1);
    AshFractions=zeros(10,1);
    DQFNormed{1,1}=size1/sumvalidfrac;
    AshFractions(1,1)=double(size1/sumvalidfrac);
    DQFLabels{1,1}=AshSizeTable{1,2};
    DQFNormed{2,1}=size2/sumvalidfrac;
    AshFractions(2,1)=double(size2/sumvalidfrac);
    DQFLabels{2,1}=AshSizeTable{2,2};
    DQFNormed{3,1}=size3/sumvalidfrac;
    AshFractions(3,1)=double(size3/sumvalidfrac);
    DQFLabels{3,1}=AshSizeTable{3,2};
    DQFNormed{4,1}=size4/sumvalidfrac;
    AshFractions(4,1)=double(size4/sumvalidfrac);
    DQFLabels{4,1}=AshSizeTable{4,2};
    DQFNormed{5,1}=size5/sumvalidfrac;
    AshFractions(5,1)=double(size5/sumvalidfrac);
    DQFLabels{5,1}=AshSizeTable{5,2};
    DQFNormed{6,1}=size6/sumvalidfrac;
    AshFractions(6,1)=double(size6/sumvalidfrac);
    DQFLabels{6,1}=AshSizeTable{6,2};
    DQFNormed{7,1}=size7/sumvalidfrac;
    AshFractions(7,1)=double(size7/sumvalidfrac);
    DQFLabels{7,1}=AshSizeTable{7,2};
    DQFNormed{8,1}=size8/sumvalidfrac;
    AshFractions(8,1)=double(size8/sumvalidfrac);
    DQFLabels{8,1}=AshSizeTable{8,2}; 
    DQFNormed{9,1}=size9/sumvalidfrac;
    AshFractions(9,1)=double(size9/sumvalidfrac);
    DQFLabels{9,1}=AshSizeTable{9,2}; 
    DQFNormed{10,1}=size10/sumvalidfrac;
    AshFractions(10,1)=double(size10/sumvalidfrac);
    DQFLabels{10,1}=AshSizeTable{10,2};
    titlestr=strcat('Volcanic-Ash-SizeDist-',GOESShortFileName);
% Now create a histogram distribution chart of the ash cloud heights
    CreateAshParticleSizePieChart(AshFractions,DQFLabels,sumvalidfrac,titlestr)
end
%add(rpt,chapter);
end
fprintf(fid,'%s\n','-----Finished Full Disk Volcanic Ash Height plot-----');


